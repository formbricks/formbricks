nameOverride: "formbricks-stage"
## Deployment & Autoscaling
deployment:
  image:
    pullPolicy: Always
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 1
      memory: 1Gi
  env:
    RATE_LIMITING_DISABLED:
      value: "1"
  envFrom:
    app-env:
      nameSuffix: app-env
      type: secret
  nodeSelector:
    karpenter.sh/capacity-type: spot
  reloadOnChange: true
autoscaling:
  enabled: true
  maxReplicas: 95
  minReplicas: 3
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 60
          type: Utilization
      type: Resource
    - resource:
        name: memory
        target:
          averageUtilization: 60
          type: Utilization
      type: Resource

### Secrets
secret:
  enabled: false
externalSecret:
  enabled: true
  files:
    app-env:
      dataFrom:
        key: stage/formbricks/environment
    app-secrets:
      dataFrom:
        key: stage/formbricks/secrets
  refreshInterval: 1m
  secretStore:
    kind: ClusterSecretStore
    name: aws-secrets-manager

## Ingress
ingress:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: {{ requiredEnv "FORMBRICKS_INGRESS_CERT_ARN" }}
    alb.ingress.kubernetes.io/group.name: internal
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-Res-2021-06
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
  enabled: true
  hosts:
    - host: stage.app.formbricks.com
      paths:
        - path: /
          pathType: Prefix
          serviceName: formbricks-stage
  ingressClassName: alb

## RBAC
rbac:
  enabled: true
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: {{ requiredEnv "FORMBRICKS_ROLE_ARN" }}
    additionalLabels: {}
    enabled: true
    name: formbricks-stage

## Dependencies
postgresql:
  enabled: false
redis:
  enabled: false
