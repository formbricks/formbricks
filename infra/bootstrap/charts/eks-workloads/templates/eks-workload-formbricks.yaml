{{- if and (.Values.formbricks) (.Values.formbricks.enabled) }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: formbricks
  namespace: {{ .Values.argocdNamespace | default "argocd" }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocdProject | default "default" }}
  sources:
    - repoURL: '{{ .Values.workloads_repo_url }}'
{{/*      targetRevision: '{{ .Values.workloads_target_revision }}'*/}}
      path: "helm-chart"
      helm:
        releaseName: formbricks
        ignoreMissingValueFiles: true
        valuesObject:
          ingress:
            enabled: true
            ingressClassName: alb
            hosts:
              - host: {{ .Values.formbricks.ingressHost }}
                paths:
                  - path: /
                    pathType: "Prefix"
                    serviceName: "formbricks"
            annotations:
              alb.ingress.kubernetes.io/scheme: internet-facing
              alb.ingress.kubernetes.io/target-type: ip  # Ensure this is "ip" if using pod-based routing
              alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
              alb.ingress.kubernetes.io/ssl-redirect: "443"
              alb.ingress.kubernetes.io/certificate-arn: {{ .Values.formbricks.certificateArn }}
              alb.ingress.kubernetes.io/healthcheck-path: "/health"
              alb.ingress.kubernetes.io/group.name: formbricks
              alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"


  destination:
    namespace: 'formbricks'
    name: '{{ .Values.clusterName }}'
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - "CreateNamespace=true"
      - "Validate=false"
      - "PrunePropagationPolicy=Foreground"
      - "PruneLast=true"
      - "RespectIgnoreDifferences=false"
{{- end }}
