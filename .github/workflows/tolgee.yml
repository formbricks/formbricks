name: Tolgee Tagging on PR Merge
permissions:
  contents: read

on:
  push:
    branches:
      - main

jobs:
  tag-production-keys:
    name: Tag Production Keys
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # This ensures we get the full git history

      - name: Get source branch name
        id: branch-name
        run: |
          # Get the most recent merge commit
          MERGE_COMMIT=$(git log --merges -n 1 --format="%H")
          if [ -n "$MERGE_COMMIT" ]; then
            # Extract the source branch name from the merge commit message
            SOURCE_BRANCH=$(git log -1 --format="%s" $MERGE_COMMIT | grep -oP "from '?\K[^']*(?='?)" || echo "")
            if [ -z "$SOURCE_BRANCH" ]; then
              # Alternative method: get the first parent's branch
              SOURCE_BRANCH=$(git name-rev --name-only $(git log -1 --merges --pretty=format:"%P" | cut -d' ' -f1))
              SOURCE_BRANCH=${SOURCE_BRANCH#remotes/origin/}
              SOURCE_BRANCH=${SOURCE_BRANCH%~*}
            fi
            
            # Only remove username prefix if it matches a GitHub username pattern
            # GitHub usernames are alphanumeric with hyphens, but cannot start with hyphens
            # This regex matches patterns like "username/" but preserves "feature/" prefixes
            if [[ "$SOURCE_BRANCH" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]+/ ]]; then
              # Check if this looks like a username prefix (not a feature branch prefix)
              PREFIX=${SOURCE_BRANCH%%/*}
              # Common feature branch prefixes to preserve
              if [[ ! "$PREFIX" =~ ^(feature|fix|bugfix|hotfix|release|chore|docs|test|refactor|style|perf|build|ci|revert)$ ]]; then
                # If not a common branch prefix, assume it's a username and remove it
                SOURCE_BRANCH=${SOURCE_BRANCH#*/}
              fi
            fi
            
            echo "SOURCE_BRANCH=$SOURCE_BRANCH" >> $GITHUB_ENV
          else
            echo "No merge commit found, using current branch"
            CURRENT_BRANCH=${GITHUB_REF##*/}
            
            # Apply the same username vs feature prefix logic
            if [[ "$CURRENT_BRANCH" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]+/ ]]; then
              PREFIX=${CURRENT_BRANCH%%/*}
              if [[ ! "$PREFIX" =~ ^(feature|fix|bugfix|hotfix|release|chore|docs|test|refactor|style|perf|build|ci|revert)$ ]]; then
                CURRENT_BRANCH=${CURRENT_BRANCH#*/}
              fi
            fi
            
            echo "SOURCE_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV
          fi

          # Log the branch name for debugging
          echo "Detected source branch: $SOURCE_BRANCH"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18 # Ensure compatibility with your project

      - name: Install Tolgee CLI
        run: npm install -g @tolgee/cli

      - name: Tag Production Keys
        run: |
          npx tolgee tag \
            --api-key ${{ secrets.TOLGEE_API_KEY }} \
            --filter-extracted \
            --filter-tag "draft:${SOURCE_BRANCH}" \
            --tag production \
            --untag "draft:${SOURCE_BRANCH}"

      - name: Tag unused production keys as Deprecated
        run: |
          npx tolgee tag \
            --api-key ${{ secrets.TOLGEE_API_KEY }} \
            --filter-not-extracted --filter-tag production \
            --tag deprecated --untag production

      - name: Tag unused draft:current-branch keys as Deprecated
        run: |
          npx tolgee tag \
            --api-key ${{ secrets.TOLGEE_API_KEY }} \
            --filter-not-extracted --filter-tag "draft:${SOURCE_BRANCH}" \
            --tag deprecated --untag "draft:${SOURCE_BRANCH}"

      - name: Sync with backup
        run: |
          npx tolgee sync \
            --api-key ${{ secrets.TOLGEE_API_KEY }} \
            --backup ./tolgee-backup \
            --continue-on-warning \
            --yes

      - name: Upload backup as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tolgee-backup-${{ github.sha }}
          path: ./tolgee-backup
          retention-days: 90
